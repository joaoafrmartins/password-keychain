#!/usr/bin/env coffee

require 'shelljs/global'

minimist = require 'minimist'

confirm = require 'confirm'

passwd = require 'password-generator'

{ resolve } = require 'path'

args = minimist process.argv.slice 2

{
  create,
  find,
  remove,
  account,
  service,
  password,
  type,
  keychain,
} = args

if not create and not find and not update and not remove and not list

  console.log """

  USAGE:

  password-keychain --create --account foo --service foo.tld [ --password ] [ --keychain ]
  password-keychain --find --account foo | --service foo.tld [ --keychain ]
  password-keychain --remove --account foo | --service foo.tld [--keychain]

  """

keychain ?= resolve __dirname, "..", "password.keychain"

type ?= "internet"

password ?= passwd(args)

commands =

  keychain: "security create-keychain #{keychain}"

  create: "security add-#{type}-password -a #{account} -s #{service} -w #{password} #{keychain}"

  find: "security find-#{type}-password -a #{account} -w #{keychain}"

  remove: "security delete-#{type}-password -a #{account} #{keychain}"

if not test "-e", keychain

  out = exec(commands.keychain).output

  console.log out

if create

  if typeof account isnt "string"

    throw new Error "account: #{account}"

  if typeof service isnt "string"

    throw new Error "service: #{service}"

  _exec = exec commands.create, { async: true, silent: true }

  _exec.stdout.on "end", ->

    console.log """

    password stored in keychain!

    account:  #{account}
    service:  #{service}
    password: #{password}

    """

else if remove

  if typeof account isnt "string"

    throw new Error "account: #{account}"

  msg = "Are you shure you want to remove password for account #{account} (y/n)?"

  _confirm = (next) ->

    confirm msg, (err, res) ->

      if err then throw new Error err

      if res.toLowerCase() is "y" then next res

      else if res.toLowerCase() is "n" then process.exit 0

      else _confirm next

  _del = () ->

    out = ""

    _exec = exec commands.remove, { async: true, silent: true }

    _exec.stdout.on "end", ->

      console.log """

      password removed from keychain!

      account:  #{account}

      """

  return _confirm _del

else if find

  password = ""

  if typeof account isnt "string"

    throw new Error "account: #{account}"

  _exec = exec commands.find, { async: true, silent: true }

  _exec.stdout.on "data", (data) ->

    password = data.toString()

  _exec.stdout.on "end", ->

    if password

      console.log """

      password found!

      account:  #{account}
      password: #{password}

      """

    else

      console.log """

      no password found!

      account:  #{account}

      """
